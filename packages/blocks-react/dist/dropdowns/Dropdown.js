"use strict";var _extends=Object.assign||function(e){for(var l=1;l<arguments.length;l++){var s=arguments[l];for(var r in s)Object.prototype.hasOwnProperty.call(s,r)&&(e[r]=s[r])}return e};function _objectWithoutProperties(e,l){var s={};for(var r in e)0<=l.indexOf(r)||Object.prototype.hasOwnProperty.call(e,r)&&(s[r]=e[r]);return s}var React=require("react"),PropTypes=require("prop-types"),classnames=require("classnames"),useComponentVisible=require("../hooks/useComponentVisible.js"),useKeyControlledMenu=require("../hooks/useKeyControlledMenu.js"),Dropdown=function(e){var l=e.className,s=e.scrollable,r=e.trigger,a=e.label,t=e.valid,o=e.invalidErrorMessage,n=(e.afterCloseOnClick,e.children),i=_objectWithoutProperties(e,["className","scrollable","trigger","label","valid","invalidErrorMessage","afterCloseOnClick","children"]),c=React.useRef(null),p=useComponentVisible({ref:c}),d=p.visible,u=p.setVisible,b=useKeyControlledMenu({ref:c,visible:d,setVisible:u,menuLength:React.Children.toArray(n).length});b.focusIdx,b.setFocusIdx;return React.createElement("div",_extends({className:classnames("blx-dropdown-wrapper",l),ref:c},i),a&&React.createElement("label",{className:classnames("blx-ui-text",{"blx-disabled":i.disabled})},a),!t&&o&&React.createElement("span",{className:"blx-invalid-input-message"},o),React.cloneElement(r,{visible:d,setVisible:u}),React.createElement("div",{className:classnames("blx-dropdown-menu",{"blx-hidden":!d})},React.createElement("ul",{className:classnames("blx-dropdown-list",{"blx-scrollable":s})},React.Children.map(n,function(e){return React.cloneElement(e,{setVisible:u})}))))};Dropdown.propTypes={className:PropTypes.string,style:PropTypes.object,scrollable:PropTypes.bool,label:PropTypes.string,trigger:PropTypes.node.isRequired,afterCloseOnClick:PropTypes.func,valid:PropTypes.bool,invalidErrorMessage:PropTypes.string},Dropdown.defaultProps={className:"",style:null,scrollable:!1,label:null,afterCloseOnClick:function(){},valid:!0,invalidErrorMessage:""},module.exports=Dropdown;
//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImRyb3Bkb3ducy9Ecm9wZG93bi5qc3giXSwibmFtZXMiOlsiUmVhY3QiLCJyZXF1aXJlIiwiUHJvcFR5cGVzIiwiY2xhc3NuYW1lcyIsInVzZUNvbXBvbmVudFZpc2libGUiLCJ1c2VLZXlDb250cm9sbGVkTWVudSIsIkRyb3Bkb3duIiwiX3JlZiIsImNsYXNzTmFtZSIsInNjcm9sbGFibGUiLCJ0cmlnZ2VyIiwibGFiZWwiLCJ2YWxpZCIsImludmFsaWRFcnJvck1lc3NhZ2UiLCJjaGlsZHJlbiIsImFmdGVyQ2xvc2VPbkNsaWNrIiwib3RoZXIiLCJfb2JqZWN0V2l0aG91dFByb3BlcnRpZXMiLCJyZWYiLCJ1c2VSZWYiLCJfdXNlQ29tcG9uZW50VmlzaWJsZSIsInZpc2libGUiLCJzZXRWaXNpYmxlIiwiX3VzZUtleUNvbnRyb2xsZWRNZW51IiwibWVudUxlbmd0aCIsIkNoaWxkcmVuIiwidG9BcnJheSIsImxlbmd0aCIsImZvY3VzSWR4Iiwic2V0Rm9jdXNJZHgiLCJjcmVhdGVFbGVtZW50IiwiX2V4dGVuZHMiLCJibHgtZGlzYWJsZWQiLCJkaXNhYmxlZCIsImNsb25lRWxlbWVudCIsImJseC1oaWRkZW4iLCJibHgtc2Nyb2xsYWJsZSIsIm1hcCIsImNoaWxkIiwicHJvcFR5cGVzIiwic3RyaW5nIiwic3R5bGUiLCJvYmplY3QiLCJib29sIiwibm9kZSIsImlzUmVxdWlyZWQiLCJmdW5jIiwiZGVmYXVsdFByb3BzIiwibW9kdWxlIiwiZXhwb3J0cyJdLCJtYXBwaW5ncyI6IjRVQUFBLElBQU1BLE1BQVFDLFFBQVEsU0FDaEJDLFVBQVlELFFBQVEsY0FDcEJFLFdBQWFGLFFBQVEsY0FFckJHLG9CQUFzQkgsUUFBUSxtQ0FDOUJJLHFCQUF1QkosUUFBUSxvQ0FHL0JLLFNBQVcsU0FBQUMsR0FTQSxJQVJmQyxFQVFlRCxFQVJmQyxVQUNBQyxFQU9lRixFQVBmRSxXQUNBQyxFQU1lSCxFQU5mRyxRQUNBQyxFQUtlSixFQUxmSSxNQUNBQyxFQUllTCxFQUpmSyxNQUNBQyxFQUdlTixFQUhmTSxvQkFFQUMsR0FDZVAsRUFGZlEsa0JBRWVSLEVBRGZPLFVBQ0dFLEVBQVlDLHlCQUFBVixFQUFBLENBQUEsWUFBQSxhQUFBLFVBQUEsUUFBQSxRQUFBLHNCQUFBLG9CQUFBLGFBQ1RXLEVBQU1sQixNQUFNbUIsT0FBTyxNQURWQyxFQUVpQmhCLG9CQUFvQixDQUFFYyxJQUFBQSxJQUE5Q0csRUFGT0QsRUFFUEMsUUFBU0MsRUFGRkYsRUFFRUUsV0FGRkMsRUFHbUJsQixxQkFBcUIsQ0FBRWEsSUFBQUEsRUFBS0csUUFBQUEsRUFBU0MsV0FBQUEsRUFBWUUsV0FBWXhCLE1BQU15QixTQUFTQyxRQUFRWixHQUFVYSxTQUhqSEosRUFHUEssU0FIT0wsRUFHR00sWUFDbEIsT0FDRTdCLE1BQUE4QixjQUFBLE1BQUFDLFNBQUEsQ0FDRXZCLFVBQVdMLFdBQVcsdUJBQXdCSyxHQUM5Q1UsSUFBS0EsR0FDREYsR0FFRkwsR0FDRVgsTUFBQThCLGNBQUEsUUFBQSxDQUFPdEIsVUFBV0wsV0FBVyxjQUFlLENBQUU2QixlQUFnQmhCLEVBQU1pQixZQUNqRXRCLElBR0pDLEdBQVNDLEdBQ1JiLE1BQUE4QixjQUFBLE9BQUEsQ0FBTXRCLFVBQVUsNkJBQTZCSyxHQUUvQ2IsTUFBTWtDLGFBQWF4QixFQUFTLENBQUVXLFFBQUFBLEVBQVNDLFdBQUFBLElBQ3pDdEIsTUFBQThCLGNBQUEsTUFBQSxDQUFLdEIsVUFBV0wsV0FBVyxvQkFBcUIsQ0FBRWdDLGNBQWVkLEtBQy9EckIsTUFBQThCLGNBQUEsS0FBQSxDQUFJdEIsVUFBV0wsV0FBVyxvQkFBcUIsQ0FBRWlDLGlCQUFrQjNCLEtBRS9EVCxNQUFNeUIsU0FBU1ksSUFBSXZCLEVBQVUsU0FBQXdCLEdBQUEsT0FDM0J0QyxNQUFNa0MsYUFBYUksRUFBTyxDQUFFaEIsV0FBQUEsVUFTMUNoQixTQUFTaUMsVUFBWSxDQUNuQi9CLFVBQVdOLFVBQVVzQyxPQUNyQkMsTUFBT3ZDLFVBQVV3QyxPQUNqQmpDLFdBQVlQLFVBQVV5QyxLQUN0QmhDLE1BQU9ULFVBQVVzQyxPQUNqQjlCLFFBQVNSLFVBQVUwQyxLQUFLQyxXQUN4QjlCLGtCQUFtQmIsVUFBVTRDLEtBQzdCbEMsTUFBT1YsVUFBVXlDLEtBQ2pCOUIsb0JBQXFCWCxVQUFVc0MsUUFHakNsQyxTQUFTeUMsYUFBZSxDQUN0QnZDLFVBQVcsR0FDWGlDLE1BQU8sS0FDUGhDLFlBQVksRUFDWkUsTUFBTyxLQUNQSSxrQkFBbUIsYUFDbkJILE9BQU8sRUFDUEMsb0JBQXFCLElBR3ZCbUMsT0FBT0MsUUFBVTNDIiwiZmlsZSI6ImRyb3Bkb3ducy9Ecm9wZG93bi5qcyIsInNvdXJjZXNDb250ZW50IjpbImNvbnN0IFJlYWN0ID0gcmVxdWlyZSgncmVhY3QnKTtcbmNvbnN0IFByb3BUeXBlcyA9IHJlcXVpcmUoJ3Byb3AtdHlwZXMnKTtcbmNvbnN0IGNsYXNzbmFtZXMgPSByZXF1aXJlKCdjbGFzc25hbWVzJyk7XG5cbmNvbnN0IHVzZUNvbXBvbmVudFZpc2libGUgPSByZXF1aXJlKCcuLi9ob29rcy91c2VDb21wb25lbnRWaXNpYmxlLmpzeCcpO1xuY29uc3QgdXNlS2V5Q29udHJvbGxlZE1lbnUgPSByZXF1aXJlKCcuLi9ob29rcy91c2VLZXlDb250cm9sbGVkTWVudS5qc3gnKTtcblxuXG5jb25zdCBEcm9wZG93biA9ICh7XG4gIGNsYXNzTmFtZSxcbiAgc2Nyb2xsYWJsZSxcbiAgdHJpZ2dlcixcbiAgbGFiZWwsXG4gIHZhbGlkLFxuICBpbnZhbGlkRXJyb3JNZXNzYWdlLFxuICBhZnRlckNsb3NlT25DbGljayxcbiAgY2hpbGRyZW4sXG4gIC4uLm90aGVyIH0pID0+IHtcbiAgY29uc3QgcmVmID0gUmVhY3QudXNlUmVmKG51bGwpO1xuICBjb25zdCB7IHZpc2libGUsIHNldFZpc2libGUgfSA9IHVzZUNvbXBvbmVudFZpc2libGUoeyByZWYgfSk7XG4gIGNvbnN0IHsgZm9jdXNJZHgsIHNldEZvY3VzSWR4IH0gPSB1c2VLZXlDb250cm9sbGVkTWVudSh7IHJlZiwgdmlzaWJsZSwgc2V0VmlzaWJsZSwgbWVudUxlbmd0aDogUmVhY3QuQ2hpbGRyZW4udG9BcnJheShjaGlsZHJlbikubGVuZ3RoIH0pO1xuICByZXR1cm4gKFxuICAgIDxkaXZcbiAgICAgIGNsYXNzTmFtZT17Y2xhc3NuYW1lcygnYmx4LWRyb3Bkb3duLXdyYXBwZXInLCBjbGFzc05hbWUpfVxuICAgICAgcmVmPXtyZWZ9XG4gICAgICB7Li4ub3RoZXJ9XG4gICAgPiBcbiAgICAgIHsgbGFiZWwgJiZcbiAgICAgICAgICA8bGFiZWwgY2xhc3NOYW1lPXtjbGFzc25hbWVzKCdibHgtdWktdGV4dCcsIHsgJ2JseC1kaXNhYmxlZCc6IG90aGVyLmRpc2FibGVkIH0pfT5cbiAgICAgICAgICAgIHtsYWJlbH1cbiAgICAgICAgICA8L2xhYmVsPlxuICAgICAgfVxuICAgICAgeyAhdmFsaWQgJiYgaW52YWxpZEVycm9yTWVzc2FnZSAmJlxuICAgICAgICAgIDxzcGFuIGNsYXNzTmFtZT1cImJseC1pbnZhbGlkLWlucHV0LW1lc3NhZ2VcIj57aW52YWxpZEVycm9yTWVzc2FnZX08L3NwYW4+XG4gICAgICB9XG4gICAgICB7IFJlYWN0LmNsb25lRWxlbWVudCh0cmlnZ2VyLCB7IHZpc2libGUsIHNldFZpc2libGUgfSkgfVxuICAgICAgPGRpdiBjbGFzc05hbWU9e2NsYXNzbmFtZXMoJ2JseC1kcm9wZG93bi1tZW51JywgeyAnYmx4LWhpZGRlbic6ICF2aXNpYmxlIH0pfT5cbiAgICAgICAgPHVsIGNsYXNzTmFtZT17Y2xhc3NuYW1lcygnYmx4LWRyb3Bkb3duLWxpc3QnLCB7ICdibHgtc2Nyb2xsYWJsZSc6IHNjcm9sbGFibGUgfSl9PlxuICAgICAgICAgIHtcbiAgICAgICAgICAgIFJlYWN0LkNoaWxkcmVuLm1hcChjaGlsZHJlbiwgY2hpbGQgPT4gKFxuICAgICAgICAgICAgICBSZWFjdC5jbG9uZUVsZW1lbnQoY2hpbGQsIHsgc2V0VmlzaWJsZSB9KVxuICAgICAgICAgICAgKSlcbiAgICAgICAgICB9XG4gICAgICAgIDwvdWw+XG4gICAgICA8L2Rpdj5cbiAgICA8L2Rpdj5cbiAgKTtcbn07XG5cbkRyb3Bkb3duLnByb3BUeXBlcyA9IHtcbiAgY2xhc3NOYW1lOiBQcm9wVHlwZXMuc3RyaW5nLFxuICBzdHlsZTogUHJvcFR5cGVzLm9iamVjdCxcbiAgc2Nyb2xsYWJsZTogUHJvcFR5cGVzLmJvb2wsXG4gIGxhYmVsOiBQcm9wVHlwZXMuc3RyaW5nLFxuICB0cmlnZ2VyOiBQcm9wVHlwZXMubm9kZS5pc1JlcXVpcmVkLFxuICBhZnRlckNsb3NlT25DbGljazogUHJvcFR5cGVzLmZ1bmMsXG4gIHZhbGlkOiBQcm9wVHlwZXMuYm9vbCxcbiAgaW52YWxpZEVycm9yTWVzc2FnZTogUHJvcFR5cGVzLnN0cmluZ1xufTtcblxuRHJvcGRvd24uZGVmYXVsdFByb3BzID0ge1xuICBjbGFzc05hbWU6ICcnLFxuICBzdHlsZTogbnVsbCxcbiAgc2Nyb2xsYWJsZTogZmFsc2UsXG4gIGxhYmVsOiBudWxsLFxuICBhZnRlckNsb3NlT25DbGljazogKCkgPT4ge30sXG4gIHZhbGlkOiB0cnVlLFxuICBpbnZhbGlkRXJyb3JNZXNzYWdlOiAnJ1xufTtcblxubW9kdWxlLmV4cG9ydHMgPSBEcm9wZG93bjtcbiJdfQ==
